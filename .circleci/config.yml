version: 2.1

orbs:
  python: circleci/python@2.1.1

jobs:
  printenv:
    docker:
      - image: cimg/python:3.12
    steps:
      - run:
          name: Printenvs
          command: |
            printenv

  lint-test:
    docker:
      - image: cimg/python:3.12
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: Run tests
          command: |
            echo "F401"
            flake8 --ignore=F821,E741,F821,E501,E501,F821,E501,E501,W292 --verbose app.py
      - run:
          when: on_fail
          name: Add Comment to PR
          command: |
            export PULL_REQUEST_NUMBER=$(echo "${CI_PULL_REQUEST}" | awk -F"/" '{print $7}')
            printenv
            curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${GITHUB_COMMENT_PERSONAL_TOKEN}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/issues/${PULL_REQUEST_NUMBER}/comments \
            -d '{"body":"Oops! This Pull Request is failed."}'
      - run:
          name: Linting done
          command: echo "Linting done"
  test:
    docker:
      - image: cimg/python:3.12
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            pip install -r requirements.txt
      - run:
          name: Run Tests
          command: |
            pytest || echo "No tests found."
      - run:
          name: Test Done
          command: echo "Test done."

  slack-notification:
    docker:
      - image: cimg/python:3.12
    steps:
      - run:
          name: slack-notification
          command: echo "Sending to slack"
      - run:
          name: slack-notification done
          command: echo "Notification done"

  waiter:
    docker:
      - image: cimg/python:3.12
    steps:
      - run: |
          while [[ $(curl --location --request GET "https://circleci.com/api/v2/workflow/${CIRCLE_WORKFLOW_ID}/job" --header "Circle-Token: ${CCI_Token}"| jq -r '.items[]|select(.name != "waiter")|.status' | grep -c "running") -gt 0 ]]
            do
              sleep 1
            done
      - run: echo "All required jobs have now completed"

workflows:
  pr-workflow:
    jobs:
      - printenv
      - lint-test:
          requires:
            - printenv
      - test:
          filters:
            branches:
              only:
                - /.*/
              ignore:
                - main
                - dev
                - staging
          requires:
            - lint-test
      - slack-notification:
          filters:
            branches:
              only:
                - dev
                - staging
                - main
      - waiter:
          requires:
            - slack-notification
